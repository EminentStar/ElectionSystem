package net.javabugs.web.example.controller;

import java.util.Enumeration;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import net.javabugs.web.common.mvc.model.vo.ResultVO;
import net.javabugs.web.example.model.dto.JoinParam;
import net.javabugs.web.example.service.HomeService;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextImpl;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;


@Controller
@RequestMapping("/home")
public class HomeController {
	
	@SuppressWarnings("unused")
	private Logger logger = Logger.getLogger(this.getClass());
	
	@Autowired
	private HomeService homeService;	
	
	@RequestMapping("/home")
	public String home(){
		return "home";
	}
	@RequestMapping(value="/usermodify", method=RequestMethod.GET)//회원정보 수정
	public ModelAndView userModify(ModelAndView mav, HttpServletRequest request){
		//현재 로그인되어있는 회원의 정보를 받아와서 수정할 수 있게 usermodify.jsp에 넘긴다.
		logger.debug("[HomeController.userModify] method called");
		// 줬다고 가정하고 세션을 뽑자
		HttpSession session = request.getSession();
		// 세션의 어트리뷰트를 탐색하자!!!
		// session.getAttribute(arg0) 키값을 알고있으면 그걸 돌려줄께? 란의미
		Enumeration<String> ans = session.getAttributeNames();
		/// SPRING_SECURITY_CONTEXT 이거 나왔죠? 그럼 우린 이걸통해 값을 뺄수있다! 값을뺴보자!
		SecurityContextImpl obj = (SecurityContextImpl) session
				.getAttribute("SPRING_SECURITY_CONTEXT");
		obj.getAuthentication().getPrincipal();
		String id = null;
		//-------------------------
		JoinParam joinParam = homeService.getUserInformation(id);
		mav.addObject("user",joinParam);
		mav.setViewName("/usermodify");
		return mav;
	}
	
	@RequestMapping(value="/usermodify", method = RequestMethod.POST)
	public @ResponseBody ModelAndView updateModify( ModelAndView mav , @Valid JoinParam joinParam,BindingResult bindingResult){
		if(bindingResult.hasErrors()){
			ResultVO rvo = new ResultVO();
			rvo.put("error",bindingResult.getFieldErrors());
			mav.addObject("err",rvo.toString()); //이상태가되면 crtcnt가안넘어가는거죠!
		}else{
		//	int result = homeService.updateUserInformation(joinParam);
			//mav.addObject("crtCnt",result);
		}
		return mav;
	}
}
